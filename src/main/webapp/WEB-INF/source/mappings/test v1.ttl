@prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix rml: <http://semweb.mmlab.be/ns/rml#>.
@prefix ql: <http://semweb.mmlab.be/ns/ql#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix lemon: <http://lemon-model.net/lemon#>.
@prefix etvonto: <https://w3id.org/def/easytv#>.
@prefix etvdata: <http://easytv.linkeddata.es/resource/>.
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@base <http://easytv.linkeddata.es/resource/mapping>.


<#mappingVideo>
  	rml:logicalSource [
    	rml:source "/Users/mpoveda/Documents/workspace/easytv-rdfy/source/json/EnglishOutput-Video1.json";
    	rml:referenceFormulation ql:JSONPath;
    	rml:iterator "$"
  	];


  	rr:subjectMap [
    	rr:template "http://easytv.linkeddata.es/resource/Video/{Url}";
    	rr:class etvonto:Video 
  	];

  rr:predicateObjectMap [
    rr:predicate lemon:language;
    rr:objectMap [
      rml:reference "lang" 
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate etvonto:url;
    rr:objectMap [
      rml:reference "Url" 
    ]
  ]
 .


<#mappingSignedLinguisticExpression>
  	rml:logicalSource [
    	rml:source "/Users/mpoveda/Documents/workspace/easytv-rdfy/source/json/EnglishOutput-Video1.json";
    	rml:referenceFormulation ql:JSONPath;
    	rml:iterator "$"
  	];


  	rr:subjectMap [
    	rr:template "http://easytv.linkeddata.es/resource/SignedLinguisticExpression/{Sls}{Url}";
    	rr:class etvonto:SignedLinguisticExpression 
  	];

  rr:predicateObjectMap [
    rr:predicate etvonto:hasRealization;
    rr:objectMap [
      rr:parentTriplesMap <#mappingVideo>; #check
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate etvonto:decomposition;
    rr:objectMap [
      rr:template "http://easytv.linkeddata.es/resource/LinguisticExpressionItem/{Sls}{Url}1";
      rr:termType rr:IRI
    ]
  ]

 .

<#mappingWrittenLinguisticExpression>
  	rml:logicalSource [
    	rml:source "/Users/mpoveda/Documents/workspace/easytv-rdfy/source/json/EnglishOutput-Video1.json";
    	rml:referenceFormulation ql:JSONPath;
    	rml:iterator "$"
  	];

  	rr:subjectMap [
    	rr:template "http://easytv.linkeddata.es/resource/WrittenLinguisticExpression/{Nls}{Url}";
    	rr:class etvonto:WrittenLinguisticExpression 
  	];

  rr:predicateObjectMap [
    rr:predicate etvonto:hasRealization;
    rr:objectMap [
      rr:parentTriplesMap <#mappingVideo>; #check
    ]
  ]
 .


<#mappingSegment>
  	rml:logicalSource [
    	rml:source "/Users/mpoveda/Documents/workspace/easytv-rdfy/source/json/EnglishOutput-Video1.json";
    	rml:referenceFormulation ql:JSONPath;
    	rml:iterator "$.segments[*]"
  	];


  	rr:subjectMap [
    	rr:template "http://easytv.linkeddata.es/resource/LinguisticExpressionItem/{Sls}{Url}{Order}";
    	rr:class etvonto:LinguisticExpressionItem 
  	];

  rr:predicateObjectMap [
    rr:predicate etvonto:nextItem;
    rr:objectMap [
      rr:template "http://easytv.linkeddata.es/resource/LinguisticExpressionItem/{Sls}{Url}{NextOrder}";
      rr:termType rr:IRI
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate etvonto:hasForm;
    rr:objectMap [
      rr:template "http://easytv.linkeddata.es/resource/LinguisticExpressionItem/{Sls}{Url}{Order}{Word}";
      rr:termType rr:IRI
    ]
  ]

 .

<#mappingForm>
  	rml:logicalSource [
    	rml:source "/Users/mpoveda/Documents/workspace/easytv-rdfy/source/json/EnglishOutput-Video1.json";
    	rml:referenceFormulation ql:JSONPath;
    	rml:iterator "$.segments[*]"
  	];


  	rr:subjectMap [
    	rr:template "http://easytv.linkeddata.es/resource/Form/{Sls}{Url}{Order}{Word}";
    	rr:class lemon:Form 
  	];

  rr:predicateObjectMap [
    rr:predicate lemon:writtenRep;
    rr:objectMap [
      rml:reference "Word";
    ]
  ]

 .

<#mappingLexicalEntry>
  	rml:logicalSource [
    	rml:source "/Users/mpoveda/Documents/workspace/easytv-rdfy/source/json/EnglishOutput-Video1.json";
    	rml:referenceFormulation ql:JSONPath;
    	rml:iterator "$.segments[*]"
  	];


  	rr:subjectMap [
    	rr:template "http://easytv.linkeddata.es/resource/LexicalEntry/{Sls}{Url}{Order}{Lemma}";
    	rr:class lemon:LexicalEntry 
  	];

  rr:predicateObjectMap [
    rr:predicate lemon:language;
    rr:objectMap [
      rml:reference "Language";
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate lemon:canonicalForm;
    rr:objectMap [
      rr:template "http://easytv.linkeddata.es/resource/Form/{Sls}{Url}{Order}{Word}";
      rr:termType rr:IRI
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate lemon:sense;
    rr:objectMap [
      rml:reference "Synsets[*].sense" ;        
      rr:termType rr:IRI
    ]
  ]

 .


 <#mappingSense>
  	rml:logicalSource [
    	rml:source "/Users/mpoveda/Documents/workspace/easytv-rdfy/source/json/EnglishOutput-Video1.json";
    	rml:referenceFormulation ql:JSONPath;
    	rml:iterator "$.segments[*].Synsets[*]"
  	];


  	rr:subjectMap [
    	rml:reference "sense";
    	rr:class lemon:LexicalSense 
  	];

  rr:predicateObjectMap [
    rr:predicate lemon:reference;
    rr:objectMap [
        rml:reference "synset";
        rr:termType rr:IRI
    ]
  ];

 .

 <#mappingSynset>
  	rml:logicalSource [
    	rml:source "/Users/mpoveda/Documents/workspace/easytv-rdfy/source/json/EnglishOutput-Video1.json";
    	rml:referenceFormulation ql:JSONPath;
    	rml:iterator "$.segments[*].Synsets[*]"
  	];


  	rr:subjectMap [
    	rml:reference "synset";
    	rr:class skos:Concept 
  	];

 .